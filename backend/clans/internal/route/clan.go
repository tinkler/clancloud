// Code generated by github.com/tinkler/mqttadmin; DO NOT EDIT.
package route
import (
	"net/http"

	"github.com/go-chi/chi/v5"
	"github.com/tinkler/mqttadmin/pkg/jsonz/sjson"
	"github.com/tinkler/clancloud/clans/internal/model/clan"
	"github.com/tinkler/mqttadmin/pkg/status"
)

func RoutesClan(m *chi.Mux) {
	m.Route("/clan", func(r chi.Router) {
		
		r.Post("/member/get-by-id", func(w http.ResponseWriter, r *http.Request) {
			m := Model[*clan.Member, struct{
				Fdep int 
				Cdep int 
				 } ]{}
			err := sjson.Bind(r, &m)
			if err != nil {
				http.Error(w, err.Error(), http.StatusBadRequest)
				return
			}
			res := Res[*clan.Member,any]{Data:m.Data}
			err = m.Data.GetByID(r.Context(), m.Args.Fdep, m.Args.Cdep, )
			
			if status.HttpError(w, err) {
				return
			}
			if sjson.HttpWrite(w, res) {
				return
			}

		})
		r.Post("/member/search-member", func(w http.ResponseWriter, r *http.Request) {
			m := Model[*clan.Member, struct{
				Match string 
				 } ]{}
			err := sjson.Bind(r, &m)
			if err != nil {
				http.Error(w, err.Error(), http.StatusBadRequest)
				return
			}
			res := Res[*clan.Member,[]*clan.Member]{Data:m.Data}
			res.Resp, err = m.Data.SearchMember(r.Context(), m.Args.Match, )
			
			if status.HttpError(w, err) {
				return
			}
			if sjson.HttpWrite(w, res) {
				return
			}

		})
	})
}
