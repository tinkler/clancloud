// Code generated by github.com/tinkler/mqttadmin; DO NOT EDIT.
import '../../http.dart';

class Member {
  int id = 0;

  String name = "";

  String surname = "";

  String nationality = "";

  int sex = 0;

  String birthRecordsPrefix = "";

  String birthRecords = "";

  String birthPlace = "";

  String qualifications = "";

  int contribution = 0;

  int rank = 0;

  String introduction = "";

  int recognizaedGeneration = 0;

  int isMarray = 0;

  int isAlive = 0;

  String profilePicture = "";

  Member? spouse;

  List<Member> spouses = [];

  Member? father;

  List<Member> children = [];

  Future<void> getById(
    int fdep,
    int cdep,
  ) async {
    var response = await D.instance.dio.post('/clan/member/get-by-id', data: {
      "data": this,
      "args": {
        "fdep": fdep,
        "cdep": cdep,
      }
    });
    if (response.data['code'] == 0) {
      var respModel = Member.fromJson(response.data['data']['data']);
      assign(respModel);
    } else {
      throw Exception(response.data['message']);
    }
  }

  Future<List<Member>> searchMember(
    String match,
  ) async {
    var response =
        await D.instance.dio.post('/clan/member/search-member', data: {
      "data": this,
      "args": {
        "match": match,
      }
    });
    if (response.data['code'] == 0) {
      var respModel = Member.fromJson(response.data['data']['data']);
      assign(respModel);
      if (response.data['data']['resp'] != null) {
        return (response.data['data']['resp'] as List<dynamic>)
            .map((e) => Member.fromJson(e))
            .toList();
      } else {
        return [];
      }
    } else {
      throw Exception(response.data['message']);
    }
  }

  Member();

  assign(Member other) {
    id = other.id;

    name = other.name;

    surname = other.surname;

    nationality = other.nationality;

    sex = other.sex;

    birthRecordsPrefix = other.birthRecordsPrefix;

    birthRecords = other.birthRecords;

    birthPlace = other.birthPlace;

    qualifications = other.qualifications;

    contribution = other.contribution;

    rank = other.rank;

    introduction = other.introduction;

    recognizaedGeneration = other.recognizaedGeneration;

    isMarray = other.isMarray;

    isAlive = other.isAlive;

    profilePicture = other.profilePicture;

    spouse = other.spouse;

    spouses = other.spouses;

    father = other.father;

    children = other.children;
  }

  Map<String, dynamic> toJson() {
    return {
      "id": id,
      "name": name,
      "surname": surname,
      "nationality": nationality,
      "sex": sex,
      "birth_records_prefix": birthRecordsPrefix,
      "birth_records": birthRecords,
      "birth_place": birthPlace,
      "qualifications": qualifications,
      "contribution": contribution,
      "rank": rank,
      "introduction": introduction,
      "recognizaed_generation": recognizaedGeneration,
      "is_marray": isMarray,
      "is_alive": isAlive,
      "profile_picture": profilePicture,
      "spouse": spouse != null ? spouse!.toJson() : null,
      "spouses": spouses.map((e) => e.toJson()).toList(),
      "father": father != null ? father!.toJson() : null,
      "children": children.map((e) => e.toJson()).toList(),
    };
  }

  Member.fromJson(Map<String, dynamic> json) {
    id = json["id"];

    name = json["name"];

    surname = json["surname"];

    nationality = json["nationality"];

    sex = json["sex"];

    birthRecordsPrefix = json["birth_records_prefix"];

    birthRecords = json["birth_records"];

    birthPlace = json["birth_place"];

    qualifications = json["qualifications"];

    contribution = json["contribution"];

    rank = json["rank"];

    introduction = json["introduction"];

    recognizaedGeneration = json["recognizaed_generation"];

    isMarray = json["is_marray"];

    isAlive = json["is_alive"];

    profilePicture = json["profile_picture"];

    spouse =
        json["spouse"] == null ? Member() : Member.fromJson(json["spouse"]);

    spouses = json["spouses"] == null
        ? []
        : (json["spouses"] as List<dynamic>)
            .map((e) => Member.fromJson(e))
            .toList();

    father =
        json["father"] == null ? Member() : Member.fromJson(json["father"]);

    children = json["children"] == null
        ? []
        : (json["children"] as List<dynamic>)
            .map((e) => Member.fromJson(e))
            .toList();
  }
}

class memberData {
  int id = 0;

  String surname = "";

  String name = "";

  int sex = 0;

  int rank = 0;

  int tagId = 0;

  String father = "";

  String children = "";

  String spouses = "";

  memberData();

  assign(memberData other) {
    id = other.id;

    surname = other.surname;

    name = other.name;

    sex = other.sex;

    rank = other.rank;

    tagId = other.tagId;

    father = other.father;

    children = other.children;

    spouses = other.spouses;
  }

  Map<String, dynamic> toJson() {
    return {
      "id": id,
      "surname": surname,
      "name": name,
      "sex": sex,
      "rank": rank,
      "tag_id": tagId,
      "father": father,
      "children": children,
      "spouses": spouses,
    };
  }

  memberData.fromJson(Map<String, dynamic> json) {
    id = json["id"];

    surname = json["surname"];

    name = json["name"];

    sex = json["sex"];

    rank = json["rank"];

    tagId = json["tag_id"];

    father = json["father"];

    children = json["children"];

    spouses = json["spouses"];
  }
}
