// Code generated by github.com/tinkler/mqttadmin; DO NOT EDIT.
import '../../http.dart';
import './const.dart';


class Memorials {
	
	int page = 0;
	
	int pageSize = 0;
	
	int total = 0;
	
	Future<List<Memorial>> load(
		
	) async {
		var response = await D.instance.dio.post('$modelUrlPrefix/memorial/memorials/load', data: {
			"data": toJson(),
			"args": {  }
		});
		if (response.data['code'] == 0) {
			var respModel = Memorials.fromJson(response.data['data']['data']);
			assign(respModel);
			if (response.data['data']['resp'] != null) {
				return (response.data['data']['resp'] as List<dynamic>).map((e) => Memorial.fromJson(e)).toList();
			} else {
				return [];
			}
			
		}
		return [];
		
	}
	
	Memorials();

	assign(Memorials other) {
		
		page = other.page;
		
		pageSize = other.pageSize;
		
		total = other.total;
		
	}

	Map<String, dynamic> toJson() {
		return {
			
			"page": page,
			
			"page_size": pageSize,
			
			"total": total,
			
		};
	}
	Memorials.fromJson(Map<String, dynamic> json) {
		
		page = json["page"];
		
		pageSize = json["page_size"];
		
		total = json["total"];
		
	}
}

class Commemorate {
	
	String id = "";
	
	String personId = "";
	
	String personName = "";
	
	int event = 0;
	
	String createAt = "";
	
	
	Commemorate();

	assign(Commemorate other) {
		
		id = other.id;
		
		personId = other.personId;
		
		personName = other.personName;
		
		event = other.event;
		
		createAt = other.createAt;
		
	}

	Map<String, dynamic> toJson() {
		return {
			
			"_id": id,
			
			"person_id": personId,
			
			"person_name": personName,
			
			"event": event,
			
			"create_at": createAt,
			
		};
	}
	Commemorate.fromJson(Map<String, dynamic> json) {
		
		id = json["_id"];
		
		personId = json["person_id"];
		
		personName = json["person_name"];
		
		event = json["event"];
		
		createAt = json["create_at"];
		
	}
}

class Memorial {
	
	String id = "";
	
	String name = "";
	
	String picPath = "";
	
	String createByUserId = "";
	
	List<Commemorate> commemorations = [];
	
	String createAt = "";
	
	Future<void> create(
		
	) async {
		var response = await D.instance.dio.post('$modelUrlPrefix/memorial/memorial/create', data: {
			"data": toJson(),
			"args": {  }
		});
		if (response.data['code'] == 0) {
			var respModel = Memorial.fromJson(response.data['data']['data']);
			assign(respModel);
			
		}
		
	}
	Future<void> update(
		
	) async {
		var response = await D.instance.dio.post('$modelUrlPrefix/memorial/memorial/update', data: {
			"data": toJson(),
			"args": {  }
		});
		if (response.data['code'] == 0) {
			var respModel = Memorial.fromJson(response.data['data']['data']);
			assign(respModel);
			
		}
		
	}
	Future<void> delete(
		
	) async {
		var response = await D.instance.dio.post('$modelUrlPrefix/memorial/memorial/delete', data: {
			"data": toJson(),
			"args": {  }
		});
		if (response.data['code'] == 0) {
			var respModel = Memorial.fromJson(response.data['data']['data']);
			assign(respModel);
			
		}
		
	}
	Future<void> commemorate(
		Commemorate? commemorate,
		
	) async {
		var response = await D.instance.dio.post('$modelUrlPrefix/memorial/memorial/commemorate', data: {
			"data": toJson(),
			"args": { "commemorate": commemorate, }
		});
		if (response.data['code'] == 0) {
			var respModel = Memorial.fromJson(response.data['data']['data']);
			assign(respModel);
			
		}
		
	}
	Future<List<Commemorate>> latestCommemorations(
		
	) async {
		var response = await D.instance.dio.post('$modelUrlPrefix/memorial/memorial/latest-commemorations', data: {
			"data": toJson(),
			"args": {  }
		});
		if (response.data['code'] == 0) {
			var respModel = Memorial.fromJson(response.data['data']['data']);
			assign(respModel);
			if (response.data['data']['resp'] != null) {
				return (response.data['data']['resp'] as List<dynamic>).map((e) => Commemorate.fromJson(e)).toList();
			} else {
				return [];
			}
			
		}
		return [];
		
	}
	
	Memorial();

	assign(Memorial other) {
		
		id = other.id;
		
		name = other.name;
		
		picPath = other.picPath;
		
		createByUserId = other.createByUserId;
		
		commemorations = other.commemorations;
		
		createAt = other.createAt;
		
	}

	Map<String, dynamic> toJson() {
		return {
			
			"_id": id,
			
			"name": name,
			
			"pic_path": picPath,
			
			"create_by_user_id": createByUserId,
			
			"commemorations": commemorations.map((e) => e.toJson()).toList(),
			
			"create_at": createAt,
			
		};
	}
	Memorial.fromJson(Map<String, dynamic> json) {
		
		id = json["_id"];
		
		name = json["name"];
		
		picPath = json["pic_path"];
		
		createByUserId = json["create_by_user_id"];
		
		commemorations = json["commemorations"] == null ? [] : (json["commemorations"] as List<dynamic>).map((e) => Commemorate.fromJson(e)).toList();
		
		createAt = json["create_at"];
		
	}
}


